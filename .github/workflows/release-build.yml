on:
  push:
  pull_request:
    branches:
    - master
#    tags:
#    - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0

    - name: Get the latest release tag
      id: get_latest_release
      run: echo ::set-output name=tag::$(git describe --tags --abbrev=0 HEAD^)

    - uses: microsoft/setup-msbuild@v2
    - uses: NuGet/setup-nuget@v2
   
    - name: Restore NuGet packages
      run: nuget restore Celeste_Launcher.sln
    
    - name: Build solution
      run: msbuild Celeste_Launcher.sln /nologo /nr:false /p:Version=${{ steps.get_latest_release.outputs.tag }} /p:platform="Any CPU" /p:configuration="Release"

    - name: Zip the build output directory
    - run: Compress-Archive -Path Celeste_Launcher_Gui/bin/Release/net48/* -Destination CelesteLauncher.zip

    - name: Generate changelog
      id: generate_changelog
      run: |
        $PREVIOUS_TAG = "${{ steps.get_latest_release.outputs.tag }}"
        $CURRENT_TAG = "$(git describe --tags)"
        Write-Output "Previous tag: $PREVIOUS_TAG"
        Write-Output "Current tag: $CURRENT_TAG"
        git log $PREVIOUS_TAG..$CURRENT_TAG --pretty=format:"%h - %s (%an)" --abbrev-commit > changelog.txt

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: ./changelog.txt
        draft: true
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./CelesteLauncher.zip
        asset_name: CelesteLauncher.zip
        asset_content_type: application/zip
